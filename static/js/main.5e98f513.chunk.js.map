{"version":3,"sources":["components/Phonebook.module.css","components/Title/MainTitle/MainTitle.module.css","components/Contacts/ContactListItem/ContactListItem.module.css","components/Contacts/ContactList/ContactList.module.css","components/Contacts/transitions/slide.module.css","components/Contacts/AddContact/AddContact.module.css","components/Alet/Alert.module.css","components/Contacts/transitions/alert.module.css","components/Contacts/FindContact/FindContact.module.css","components/Contacts/transitions/pop.module.css","components/Contacts/transitions/slideTitle.module.css","components/Title/MainTitle/MainTitle.js","components/Contacts/ContactListItem/ContactListItem.js","components/Contacts/ContactList/ContactList.js","components/Alet/Alert.js","components/Contacts/AddContact/AddContact.js","components/Contacts/FindContact/FindContact.js","redux/contacts/contactsActions.js","components/Phonebook.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","MainTitle","className","styles","mainTitle","ContactListItem","contact","deleteItem","data-id","id","contactListItem","name","number","type","onClick","ContactList","items","filter","contacts","length","toLowerCase","includes","filteredContact","TransitionGroup","component","contactList","map","CSSTransition","key","timeout","classNames","slideTransition","Alert","alert","AddContact","state","exist","handleInputValue","el","inputValue","target","dataset","setState","value","handleSubmit","preventDefault","uuidv4","replace","l","toUpperCase","props","find","element","setTimeout","addNewItem","this","contactForm","onSubmit","htmlFor","data-type","placeholder","onChange","variant","in","alertTransition","unmountOnExit","React","Component","FindContact","getFilterValue","findContainet","createAction","e","payload","Phonebook","inOn","maineContainer","subContainer","slideTitleTransition","popTransition","mapDispatchToProps","connect","App","contactsReducer","createReducer","action","item","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e98f513.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"maineContainer\":\"Phonebook_maineContainer__3MolX\",\"subContainer\":\"Phonebook_subContainer__2Q2_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"MainTitle_mainTitle__3QqO8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__1loAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__dhLnq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__3fV5p\",\"enterActive\":\"slide_enterActive__3VIAH\",\"exit\":\"slide_exit__3uupq\",\"exitActive\":\"slide_exitActive__1Sd0X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"AddContact_contactForm__2cH8I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__2Klyb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alert_enter__191m_\",\"enterActive\":\"alert_enterActive__3ZyQg\",\"exit\":\"alert_exit__Vbjd8\",\"exitActive\":\"alert_exitActive__1uKsY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findContainet\":\"FindContact_findContainet__2yFwL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__3DOjg\",\"enterActive\":\"pop_enterActive__1qSPD\",\"exit\":\"pop_exit__3Ctrf\",\"exitActive\":\"pop_exitActive__2AJpp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideTitle_enter__1BfH0\",\"enterActive\":\"slideTitle_enterActive__1YCDJ\"};","import React from \"react\";\r\nimport styles from \"./MainTitle.module.css\";\r\n\r\nconst MainTitle = () => {\r\n  return <h1 className={styles.mainTitle}>Телефонна книга</h1>;\r\n};\r\n\r\nexport default MainTitle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ contact, deleteItem }) => {\r\n  return (\r\n    <li data-id={contact.id} className={styles.contactListItem}>\r\n      <h4>{contact.name}:</h4>\r\n      <h4>{contact.number}</h4>\r\n      <button type=\"button\" id={contact.id} onClick={deleteItem}>\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport slideTransition from \"../transitions/slide.module.css\";\r\n\r\nfunction filteredContact(items, filter) {\r\n  if (filter.length !== 0) {\r\n    return items.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  } else {\r\n    return items;\r\n  }\r\n}\r\n\r\nconst ContactList = ({ items = [], filter = \"\", deleteItem }) => {\r\n  const contacts = filteredContact(items, filter);\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.contactList}>\r\n      {contacts.map((contact) => (\r\n        <CSSTransition\r\n          key={contact.id}\r\n          timeout={250}\r\n          classNames={slideTransition}\r\n        >\r\n          <ContactListItem\r\n            deleteItem={deleteItem}\r\n            contact={contact}\r\n            key={contact.id}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport styles from \"./Alert.module.css\";\r\n\r\nconst Alert = () => {\r\n  return (\r\n    <div className={styles.alert}>\r\n      <p>Контакт з таким іменем вже існує</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styles from \"./AddContact.module.css\";\r\nimport Alert from \"../../Alet/Alert\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport alertTransition from \"../../Contacts/transitions/alert.module.css\";\r\n\r\nexport class AddContact extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    exist: false,\r\n  };\r\n\r\n  handleInputValue = (el) => {\r\n    const inputValue = el.target.dataset.type;\r\n    this.setState({\r\n      [inputValue]: el.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (el) => {\r\n    el.preventDefault();\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: this.state.name.replace(/\\b\\w/g, (l) => l.toUpperCase()),\r\n      number: this.state.number,\r\n    };\r\n    if (\r\n      this.props.items.find(\r\n        (element) => element.name.toLowerCase() === contact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      this.setState({ exist: true });\r\n      return setTimeout(() => {\r\n        this.setState({ exist: false });\r\n      }, 2000);\r\n    } else {\r\n      this.props.addNewItem(contact);\r\n    }\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, exist } = this.state;\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"contactName\">Ім'я</label>\r\n        <input\r\n          id=\"contactName\"\r\n          type=\"text\"\r\n          data-type=\"name\"\r\n          value={name}\r\n          placeholder=\"Введіть Ваше Ім'я\"\r\n          onChange={this.handleInputValue}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"contactNumber\">Номер</label>\r\n        <input\r\n          id=\"contactNumber\"\r\n          type=\"text\"\r\n          data-type=\"number\"\r\n          value={number}\r\n          placeholder=\"Введіть Ваш номер\"\r\n          onChange={this.handleInputValue}\r\n        />\r\n        <br />\r\n        <button variant=\"outlined\" type=\"submit\">\r\n          Додати контакт\r\n        </button>\r\n        <CSSTransition\r\n          in={exist}\r\n          timeout={250}\r\n          classNames={alertTransition}\r\n          unmountOnExit\r\n        >\r\n          <Alert />\r\n        </CSSTransition>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./FindContact.module.css\";\r\n\r\nconst FindContact = ({ getFilterValue }) => {\r\n  return (\r\n    <div className={styles.findContainet}>\r\n      <label htmlFor=\"findContact\">Введіть ім'я для пошуку</label>\r\n      <input id=\"findContact\" type=\"text\" onChange={getFilterValue} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindContact;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addNewItem = createAction(\"ADD_NEW_ITEM\");\r\nconst deleteItem = createAction(\"DELETE_ITEM\", function prepare(e) {\r\n  const id = e.target.id;\r\n  return {\r\n    payload: id,\r\n  };\r\n});\r\nconst getFilterValue = createAction(\"FILTER_ITEM\", function prepare(e) {\r\n  const string = e.target.value;\r\n  return {\r\n    payload: string,\r\n  };\r\n});\r\n\r\n// const addNewItem = (item) => {\r\n//   return {\r\n//     type: \"ADD_NEW_ITEM\",\r\n//     payload: item,\r\n//   };\r\n// };\r\n\r\n// const deleteItem = (e) => {\r\n//   const id = e.target.id;\r\n//   return {\r\n//     type: \"DELETE_ITEM\",\r\n//     payload: id,\r\n//   };\r\n// };\r\n\r\n// const getFilterValue = (e) => {\r\n//   const string = e.target.value;\r\n//   return {\r\n//     type: \"FILTER_ITEM\",\r\n//     payload: string,\r\n//   };\r\n// };\r\n\r\nexport { addNewItem, deleteItem, getFilterValue };\r\n","import React from \"react\";\r\nimport MainTitle from \"./Title/MainTitle/MainTitle\";\r\nimport ContactList from \"./Contacts/ContactList/ContactList\";\r\nimport { AddContact } from \"./Contacts/AddContact/AddContact\";\r\nimport FindContact from \"./Contacts/FindContact/FindContact\";\r\n// import { sendStoregData, getStoregData } from \"./Services/LocalStoreg\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport popTransition from \"./Contacts/transitions/pop.module.css\";\r\nimport slideTitleTransition from \"./Contacts/transitions/slideTitle.module.css\";\r\nimport styles from \"./Phonebook.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addNewItem,\r\n  deleteItem,\r\n  getFilterValue,\r\n} from \"../redux/contacts/contactsActions\";\r\n\r\nclass Phonebook extends React.Component {\r\n  state = {\r\n    inOn: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ inOn: true });\r\n  }\r\n\r\n  render() {\r\n    const { inOn } = this.state;\r\n    const {\r\n      items,\r\n      filter,\r\n      addNewItem,\r\n      deleteItem,\r\n      getFilterValue,\r\n    } = this.props;\r\n    return (\r\n      <div className={styles.maineContainer}>\r\n        <div className={styles.subContainer}>\r\n          <CSSTransition\r\n            in={inOn}\r\n            timeout={500}\r\n            classNames={slideTitleTransition}\r\n            unmountOnExit\r\n          >\r\n            <MainTitle />\r\n          </CSSTransition>\r\n          <AddContact addNewItem={addNewItem} items={items} />\r\n          <CSSTransition\r\n            in={items.length > 1}\r\n            timeout={250}\r\n            classNames={popTransition}\r\n            unmountOnExit\r\n          >\r\n            <FindContact getFilterValue={getFilterValue} />\r\n          </CSSTransition>\r\n          <ContactList items={items} filter={filter} deleteItem={deleteItem} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: state.contacts.items,\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     items: state.items,\r\n//     filter: state.filter,\r\n//   };\r\n// };\r\n\r\nconst mapDispatchToProps = {\r\n  addNewItem,\r\n  deleteItem,\r\n  getFilterValue,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React from \"react\";\nimport Phonebook from \"./components/Phonebook\";\n\nconst App = () => {\n  return <Phonebook />;\n};\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addNewItem, deleteItem, getFilterValue } from \"./contactsActions\";\r\n\r\nconst contactsReducer = createReducer(\r\n  { items: [], filter: \"\" },\r\n  {\r\n    [addNewItem]: (state, action) => ({\r\n      ...state,\r\n      items: [...state.items, action.payload],\r\n    }),\r\n    [deleteItem]: (state, action) => ({\r\n      ...state,\r\n      items: [...state.items.filter((item) => item.id !== action.payload)],\r\n    }),\r\n    [getFilterValue]: (state, action) => ({ ...state, filter: action.payload }),\r\n  }\r\n);\r\n\r\n// const contactsReducer = (state = { items: [], filter: \"\" }, action) => {\r\n//   switch (action.type) {\r\n//     case \"ADD_NEW_ITEM\":\r\n//       return {\r\n//         ...state,\r\n//         items: [...state.items, action.payload],\r\n//       };\r\n\r\n//     case \"DELETE_ITEM\":\r\n//       return {\r\n//         ...state,\r\n//         items: [...state.items.filter((item) => item.id !== action.payload)],\r\n//       };\r\n//     case \"FILTER_ITEM\":\r\n//       return {\r\n//         ...state,\r\n//         filter: action.payload,\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default contactsReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n// import { createStore } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\n// const store = createStore(contactsReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}